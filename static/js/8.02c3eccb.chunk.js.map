{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","airbox/model/box.ts","airbox/model/box_model.tsx","airbox/components/BoxCard.tsx","airbox/components/AddBoxCard.tsx","airbox/components/BoxBoard.tsx","airbox/components/UpdatingIndicator.tsx","airbox/index.tsx"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","BoxType","AirBoxModel","liveQuery","decrypt","cipher","key","localStorage","getItem","CryptoJS","AES","enc","Utf8","Error","subscribe","query","LC","Query","find","then","boxes","replace","map","items","db2model","on","item","box","insert","remove","get","unSubscribe","unsubscribe","create","action","loading","airBoxDB","extend","set","content","boxType","save","delete","id","createWithoutData","destroy","makeObservable","this","applicationId","applicationKey","init","appId","process","appKey","record","models","observable","index","findIndex","model","splice","computed","airBoxModel","AirBoxModelContext","React","createContext","UrlBox","urls","matchAll","elements","url","link","textContent","href","target","rel","laterUrl","BoxCard","prop","useContext","style","flex","boxSizing","maxWidth","border","overflowWrap","onClick","navigator","clipboard","writeText","AddBoxCard","useState","update","onSubmit","event","preventDefault","Text","type","onChange","BoxBoard","observer","display","flexWrap","padding","UpdatingIndicator","isLoading","AirBoxApp","useEffect","Provider"],"mappings":"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","file":"static/js/8.02c3eccb.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default interface Box extends BoxWithoutId {\n  id: string;\n}\n\nexport interface BoxWithoutId {\n  content: string;\n\n  boxType: BoxType;\n}\n\nexport enum BoxType {\n  Text = 'Text',\n  Image = 'Image',\n  URL = 'URL',\n  File = 'File',\n}","import { action, computed, makeObservable, observable } from \"mobx\";\nimport React from \"react\";\nimport LC from 'leanengine';\nimport Box, { BoxWithoutId, BoxType } from \"./box\";\nimport CryptoJS from 'crypto-js';\n\nexport default class AirBoxModel {\n  @observable\n  private models: Array<Box> = [];\n\n  @observable\n  private loading = true;\n\n  private liveQuery: LC.LiveQuery<LC.Queriable> | undefined;\n\n  constructor() {\n    makeObservable(this);\n    if (LC.applicationId === undefined || LC.applicationKey === undefined) {\n      LC.init({\n        appId: this.decrypt(process.env.REACT_APP_LEAN_AIRBOX_ID),\n        appKey: this.decrypt(process.env.REACT_APP_LEAN_AIRBOX_KEY),\n      });\n    }\n    this.subscribe();\n  }\n\n  private decrypt = (cipher: string | undefined) => {\n    const key = localStorage.getItem('private key');\n    if (!key || key.length === 0 || !cipher || cipher.length === 0) {\n      throw Error(`decrypt ${cipher} failed`);\n    } else {\n      return CryptoJS.AES.decrypt(cipher, key).toString(CryptoJS.enc.Utf8)\n    }\n  }\n\n  subscribe = () => {\n    const query = new LC.Query('AirBox');\n    query.find().then(boxes =>\n      this.replace(boxes.map(items => this.db2model(items)))\n    );\n    query.subscribe().then(liveQuery => {\n      this.liveQuery = liveQuery;\n      liveQuery.on('create', item => {\n        if (item !== undefined) {\n          const box = this.db2model(item);\n          this.insert(box);\n        }\n      });\n      liveQuery.on('delete', item => {\n        if (item !== undefined) {\n          this.remove(item.get('objectId') as string);\n        }\n      });\n    });\n  }\n\n  unSubscribe = () => {\n    this.liveQuery?.unsubscribe();\n  }\n\n  @action\n  private replace = (items: Array<Box>) => {\n    this.models = items;\n    this.loading = false;\n  }\n\n  @action\n  private insert = (item: Box) => {\n    this.models.push(item);\n    this.loading = false;\n  }\n\n  @action\n  private remove = (id: string) => {\n    const index = this.models.findIndex((model) => model.id === id);\n    if (index > -1) {\n      this.models.splice(index, 1);\n    }\n    this.loading = false;\n  }\n\n  private db2model(record: LC.Queriable): Box {\n    return {\n      id: record.get('objectId') as string,\n      content: record.get('content') as string,\n      boxType: BoxType[record.get('content') as keyof typeof BoxType],\n    };\n  }\n\n  create = (box: BoxWithoutId) => {\n    action(() => this.loading = true);\n    const AirBoxDB = LC.Object.extend('AirBox');\n    const airBoxDB = new AirBoxDB();\n    airBoxDB.set('content', box.content);\n    airBoxDB.set('boxType', BoxType[box.boxType]);\n    return airBoxDB.save();\n  }\n\n  delete = (id: string) => {\n    action(() => this.loading = true);\n    const airBoxDB = LC.Object.createWithoutData('AirBox', id);\n    airBoxDB.destroy();\n  }\n\n  @computed get boxes() {\n    return this.models;\n  }\n\n  @computed get isLoading() {\n    return this.loading;\n  }\n\n}\n\nconst airBoxModel = new AirBoxModel();\nexport const AirBoxModelContext = React.createContext<AirBoxModel>(airBoxModel);\n","import React, { useContext } from \"react\";\nimport Box from \"../model/box\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\ninterface BoxCardProp {\n  box: Box\n}\n\nconst BoxCard = (prop: BoxCardProp) => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  return (\n    <div style={{ flex: '1 200px', boxSizing: 'border-box', maxWidth: '100%', border: '1px solid', overflowWrap: 'break-word' }}>\n      {UrlBox(prop.box.content)}\n      <button onClick={() => { airBoxModel.delete(prop.box.id) }}>Delete</button>\n      <button onClick={() => { navigator.clipboard.writeText(prop.box.content) }}>Copy</button>\n    </div>\n  );\n}\n\nconst UrlBox = (content: string) => {\n  const urlRegexp = /https?:\\/\\/[-a-zA-Z0-9@:%._~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b[-a-zA-Z0-9()@:%_.~#?&//=]*/g;\n  const urls = Array.from(content.matchAll(urlRegexp));\n\n  if (urls.length === 0) {\n    return <span>{content}</span>\n  }\n\n  const elements: Array<JSX.Element> = [];\n  for (let index = 0; index < urls.length; index++) {\n    // text-url-text-...-url-text\n    const url = urls[index];\n    const link = content.slice(url.index, url.index! + url[0].length);\n\n    if (index === 0 && url.index! > 0) {\n      elements.push(\n        <span key={'textSpan-begin'}>{content.slice(0, url.index)}</span>\n      );\n    }\n\n    if (index === urls.length - 1) {\n      const textContent = content.slice(url.index! + link.length, content.length);\n      elements.push(\n        <a key={`a-${index}`} href={link} target={'_blank'} rel={'noreferrer'}>{link}</a>,\n        <span key={`textSpan-${index}`}>{textContent}</span>\n      );\n      break;\n    }\n\n    // later str\n    const laterUrl = urls[index + 1];\n    const textContent = content.slice(url.index! + link.length, laterUrl.index);\n    elements.push(\n      <a key={`a-${index}`} href={link} target={'_blank'} rel={'noreferrer'}>{link}</a>,\n      <span key={`textSpan-${index}`}>{textContent}</span>\n    );\n\n  }\n  return elements\n}\n\nexport default BoxCard","import React, { useContext, useState } from \"react\";\nimport { BoxType } from \"../model/box\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\nconst AddBoxCard = () => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  const [content, update] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    airBoxModel.create({\n      content: content,\n      boxType: BoxType.Text,\n    });\n  }\n\n\n  return (\n    <div style={{ border: '1px solid' }}>\n      <form onSubmit={handleSubmit}>\n        <input type='text' value={content} onChange={(event) => { update(event.target.value) }}></input>\n        <input type='submit'></input>\n      </form>\n    </div>\n  );\n}\n\nexport default AddBoxCard","import React, { useContext } from 'react';\nimport { AirBoxModelContext } from '../model/box_model';\nimport { observer } from 'mobx-react-lite';\nimport BoxCard from './BoxCard';\nimport AddBoxCard from './AddBoxCard';\n\nconst BoxBoard = observer(() => {\n  const airBoxModel = useContext(AirBoxModelContext);\n\n  const boxes = airBoxModel.boxes.map(box => (\n    <BoxCard key={box.id} box={box} />\n  ));\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexWrap: 'wrap', padding: '10px' }}>\n        {boxes}\n      </div>\n      <AddBoxCard />\n    </>\n  );\n})\n\nexport default BoxBoard","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\nconst UpdatingIndicator = observer(() => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  if (airBoxModel.isLoading) {\n    return <p>Updating...</p>\n  } else {\n    return null;\n  }\n})\n\nexport default UpdatingIndicator;","import React, { useEffect } from 'react';\nimport AirBoxModel, { AirBoxModelContext } from './model/box_model';\nimport BoxBoard from './components/BoxBoard';\nimport UpdatingIndicator from './components/UpdatingIndicator';\n\nfunction AirBoxApp() {\n  const airBoxModel = new AirBoxModel();\n\n  useEffect(() => {\n    return () => {\n      airBoxModel.unSubscribe();\n    };\n  })\n\n  return (\n    <AirBoxModelContext.Provider value={airBoxModel}>\n      <UpdatingIndicator />\n      <BoxBoard />\n    </AirBoxModelContext.Provider>\n  );\n}\n\nexport default AirBoxApp;\n"],"sourceRoot":""}