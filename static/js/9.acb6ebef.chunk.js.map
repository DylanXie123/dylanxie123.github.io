{"version":3,"sources":["calculator/model/expression.tsx","calculator/model/controller.tsx","calculator/icons/delete.svg","calculator/icons/backspace.svg","calculator/components/MathKeyboard.tsx","calculator/components/MathBox.tsx","calculator/components/ResultBox.tsx","calculator/index.tsx"],"names":["Mode","require","Expression","parser","AlgebraLatex","makeObservable","this","parseLatex","latex","toNerdamer","error","expression","evaluate","text","result","toTeX","calc2dis","forEach","v","k","replace","search","Defint","Limit","Matrix","Var","Eval","solveFor","nerdamer","integrate","diff","observable","action","rawLatex","computed","Map","RegExp","expStore","ExpContext","React","createContext","Controller","mfController","setController","mf","focus","add","insert","format","backspace","executeCommand","clear","move","direction","controller","ControllerContext","MathKeyboard","style","position","bottom","width","zIndex","display","gridTemplateColumns","justifyContent","gap","ExtraKeyboard","map","key","index","MathKey","children","onclick","BasicKeyboard","useContext","row1","row2","command","row3","push","src","deleteIcon","alt","backIcon","row4","prop","onClick","textTransform","height","background","value","readOnly","MathBox","exp","virtualKeyboardMode","onContentDidChange","update","getValue","ref","mfe","outline","fontSize","margin","padding","border","backgroundColor","ResultBox","observer","mode","EvalResultBox","SymResultBox","evalResult","eval","textResult","undefined","InfoBox","content","hidden","hideAdd","marginLeft","substr","Calculator","Provider"],"mappings":"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","file":"static/js/9.acb6ebef.chunk.js","sourcesContent":["import { action, computed, makeObservable, observable } from \"mobx\";\nimport React from \"react\";\nimport nerdamer from 'nerdamer';\nimport AlgebraLatex from 'algebra-latex'\nrequire('nerdamer/all');\n\nexport enum Mode {\n  Eval = 0,\n  Var,\n  Defint,\n  Limit,\n  Matrix,\n};\n\nexport default class Expression {\n  @observable\n  latex: string = '';\n\n  private parser = new AlgebraLatex();\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action\n  update = (rawLatex: string) => {\n    this.latex = rawLatex;\n  }\n\n  @computed get expression() {\n    try {\n      return this.parser.parseLatex(this.latex).toNerdamer() as nerdamer.Expression;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get eval() {\n    try {\n      return this.expression!.evaluate().text();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get text() {\n    try {\n      // TODO: Implement only here, find a better way to implement to all method\n      let result = this.expression?.toTeX();\n      calc2dis.forEach((v, k) => result = result?.replace(k, v));\n      return result;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get mode(): Mode {\n    try {\n      if (this.latex.search('int') >= 0) {\n        return Mode.Defint;\n      } else if (this.latex.search('limit') >= 0) {\n        return Mode.Limit;\n      } else if (this.latex.search('matrix') >= 0) {\n        return Mode.Matrix;\n      } else if (this.latex.search('x') >= 0) {\n        return Mode.Var;\n      } else {\n        return Mode.Eval;\n      }\n    } catch (error) {\n      return Mode.Eval;\n    }\n  }\n\n  @computed get solve() {\n    try {\n      return this.expression!.solveFor('x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get integrate() {\n    try {\n      return nerdamer.integrate(this.expression!, 'x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get diff() {\n    try {\n      return nerdamer.diff(this.expression!, 'x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n}\n\nconst calc2dis = new Map<RegExp, string>([\n  [RegExp('\\\\\\\\cdot', 'g'), '\\\\times'],\n]);\n\nconst expStore = new Expression();\nexport const ExpContext = React.createContext<Expression>(expStore);","import { Mathfield } from 'mathlive/dist/public/mathfield'\nimport React from 'react';\n\nexport default class Controller {\n  private mfController!: Mathfield;\n\n  setController = (mf: Mathfield) => {\n    this.mfController = mf;\n    this.focus();\n  }\n\n  add = (expression: string) => this.mfController.insert(expression, { focus: true, format: \"latex\" });\n\n  backspace = () => {\n    this.mfController.executeCommand(\"deleteBackward\");\n    this.focus();\n  }\n\n  clear = () => {\n    this.mfController.executeCommand(\"deleteAll\");\n    this.focus();\n  }\n\n  move = (direction: Direction) => {\n    if (direction === \"forward\") {\n      this.mfController.executeCommand(\"moveToNextChar\");\n    } else {\n      this.mfController.executeCommand(\"moveToPreviousChar\");\n    }\n    this.focus();\n  }\n\n  private focus = () => {\n    if (this.mfController && this.mfController.focus) {\n      this.mfController.focus();\n    }\n  }\n}\n\ntype Direction = 'forward' | 'backword';\n\nconst controller = new Controller();\nexport const ControllerContext = React.createContext<Controller>(controller);","export default __webpack_public_path__ + \"static/media/delete.020411b3.svg\";","export default __webpack_public_path__ + \"static/media/backspace.521c7719.svg\";","import React, { MouseEventHandler, useContext } from \"react\";\nimport MathView from \"react-math-view\";\nimport { ControllerContext } from \"../model/controller\";\nimport deleteIcon from '../icons/delete.svg';\nimport backIcon from '../icons/backspace.svg';\n\nconst kKeyWidth = 64;\nconst kKeyHeight = 36;\n\nexport default function MathKeyboard() {\n\n  return (\n    <div style={{ position: 'fixed', bottom: 0, width: '100%', zIndex: -1 }}>\n      <div style={{ display: 'grid', gridTemplateColumns: `repeat(5, ${kKeyWidth}px)`, justifyContent: 'center', gap: 2 }}>\n        {ExtraKeyboard().map(\n          (key, index) => (\n            <div key={'extra' + index}>\n              <MathKey\n                children={key.children}\n                onclick={key.onclick}\n                key={index}\n              />\n            </div>\n          )\n        )}\n        {BasicKeyboard().map(\n          (key, index) => (\n            <div key={'basic' + index} >\n              <MathKey\n                children={key.children}\n                onclick={key.onclick}\n                key={index}\n              />\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ExtraKeyboard(): MathKeyProp[] {\n  const controller = useContext(ControllerContext);\n\n  const row1: Array<MathKeyProp> = ['\\\\sin', '\\\\cos', '\\\\tan', '\\\\log', '\\\\sqrt'].map((v) => ({\n    children: v,\n    onclick: () => {\n      controller.add(v + '({#?})');\n    }\n  }));\n\n  const row2Trig: Array<Record<\"children\" | \"command\", string>> = [\n    {\n      children: '\\\\sin^{-1}',\n      command: '\\\\arcsin({#?})'\n    },\n    {\n      children: '\\\\cos^{-1}',\n      command: '\\\\arccos({#?})'\n    },\n    {\n      children: '\\\\tan^{-1}',\n      command: '\\\\arctan({#?})'\n    },\n    {\n      children: 'e^{#?}',\n      command: 'e^{#?}'\n    },\n    {\n      children: '{#?}^2',\n      command: '{#?}^2'\n    },\n  ];\n\n  const row2: Array<MathKeyProp> = row2Trig.map((v) => ({\n    children: v.children,\n    onclick: () => controller.add(v.command)\n  }));\n\n  const row3: Array<MathKeyProp> = ['\\\\frac{#?}{#?}', '(', ')'].map((v) => ({\n    children: v,\n    onclick: () => {\n      controller.add(v);\n    }\n  }));\n\n  row3.push({\n    children: '\\\\leftarrow',\n    onclick: () => {\n      controller.move(\"backword\");\n    }\n  })\n  row3.push({\n    children: '\\\\rightarrow',\n    onclick: () => {\n      controller.move(\"forward\");\n    }\n  })\n  return [...row1, ...row2, ...row3];\n}\n\nfunction BasicKeyboard(): MathKeyProp[] {\n  const controller = useContext(ControllerContext);\n\n  const row1: Array<MathKeyProp> = ['7', '8', '9'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row1.push({\n    children: <img src={deleteIcon} alt=\"del\" style={{ width: 24 }} />,\n    onclick: () => controller.clear()\n  })\n\n  row1.push({\n    children: <img src={backIcon} alt=\"backspace\" style={{ width: 24 }} />,\n    onclick: () => controller.backspace()\n  })\n\n  const row2: Array<MathKeyProp> = ['4', '5', '6', '+', '-'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  const row3: Array<MathKeyProp> = ['1', '2', '3'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row3.push({\n    children: '\\\\times',\n    onclick: () => controller.add('*')\n  })\n\n  row3.push({\n    children: '\\\\div',\n    onclick: () => controller.add('/')\n  })\n\n  const row4: Array<MathKeyProp> = ['0', '.', '\\\\pi', 'e'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row4.push({\n    children: '=',\n    onclick: () => controller.add('/')\n  })\n\n  return [...row1, ...row2, ...row3, ...row4];\n}\n\ninterface MathKeyProp {\n  onclick: MouseEventHandler\n  children?: string | JSX.Element\n}\n\nfunction MathKey(prop: MathKeyProp) {\n\n  return (\n    <button\n      onClick={prop.onclick}\n      style={{\n        textTransform: 'lowercase',\n        height: kKeyHeight,\n        width: kKeyWidth,\n        background: 'none',\n      }}\n    >\n      {typeof prop.children === 'string' ?\n        <MathView\n          value={prop.children}\n          readOnly={true}\n        /> :\n        prop.children}\n    </button>\n  );\n}","import React, { useContext } from \"react\";\nimport { ExpContext } from \"../model/expression\";\nimport { ControllerContext } from '../model/controller';\nimport MathView from \"react-math-view\";\n\nexport default function MathBox() {\n  const exp = useContext(ExpContext);\n  const controller = useContext(ControllerContext);\n\n  return (\n    <MathView\n      virtualKeyboardMode='off'\n      onContentDidChange={\n        mf => exp.update(mf.getValue(\"latex-expanded\"))\n      }\n      ref={(mfe) => {\n        if (mfe) {\n          controller.setController(mfe);\n        }\n      }}\n      style={{\n        outline: '5px solid white',\n        fontSize: 24,\n        margin: 5,\n        padding: 5,\n        border: '2px dashed black',\n        backgroundColor: 'white'\n      }}\n    />\n  );\n}","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { ExpContext, Mode } from \"../model/expression\";\nimport MathView from 'react-math-view';\nimport { ControllerContext } from \"../model/controller\";\n\nconst ResultBox = observer(() => {\n  const exp = useContext(ExpContext);\n\n  switch (exp.mode) {\n    case Mode.Eval:\n      return (<>\n        <p>{exp.latex}</p>\n        <EvalResultBox />\n      </>);\n    case Mode.Var:\n      return (<>\n        <p>{exp.latex}</p>\n        <SymResultBox />\n      </>);\n    default:\n      return (<EvalResultBox />);\n  }\n});\n\nconst EvalResultBox = observer(() => {\n  const exp = useContext(ExpContext);\n  const evalResult = exp.eval;\n  const textResult = exp.text;\n\n  if (evalResult === undefined) {\n    return <div></div>;\n  }\n\n  if (evalResult === textResult) {\n    return (<InfoBox content={`=${evalResult}`} />);\n  }\n\n  return (<div>\n    <InfoBox content={`=${exp.eval}`} />\n    <InfoBox content={`=${exp.text}`} />\n  </div>);\n});\n\n\nconst SymResultBox = observer(() => {\n  const exp = useContext(ExpContext);\n\n  if (exp.integrate === undefined) {\n    return <div></div>;\n  }\n\n  return (<div>\n    <InfoBox content={`=${exp.integrate}`} />\n    <InfoBox content={`=${exp.diff}`} />\n  </div>);\n});\n\ninterface InfoBoxProp {\n  content: string,\n  hideAdd?: boolean,\n}\n\n// TODO: Auto hide button when content is empty\nfunction InfoBox(prop: InfoBoxProp) {\n  const controller = useContext(ControllerContext);\n  return (\n    <div style={{ display: 'flex' }}>\n      <MathView\n        value={prop.content}\n        readOnly={true}\n        style={{ outline: 0 }}\n      >\n      </MathView>\n      <button\n        hidden={prop.hideAdd}\n        style={{ height: '50%', marginLeft: '20pt' }}\n        onClick={() => {\n          controller.clear();\n          controller.add(prop.content.substr(1));\n        }}>\n        +\n      </button>\n    </div>\n  );\n}\n\nexport default ResultBox;","import React from 'react';\nimport './model/expression';\nimport Expression, { ExpContext } from './model/expression';\nimport Controller, { ControllerContext } from './model/controller';\nimport MathKeyboard from './components/MathKeyboard';\nimport MathBox from './components/MathBox'\nimport ResultBox from './components/ResultBox'\n\nexport default function Calculator() {\n  const controller = new Controller();\n  const expStore = new Expression();\n  \n  return (\n    <ControllerContext.Provider value={controller}>\n      <ExpContext.Provider value={expStore}>\n        <MathBox />\n        <ResultBox />\n      </ExpContext.Provider>\n      <MathKeyboard />\n    </ControllerContext.Provider>\n  );\n}\n"],"sourceRoot":""}