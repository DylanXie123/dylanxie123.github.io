{"version":3,"sources":["airbox/model/box.ts","airbox/model/box_model.tsx","airbox/components/BoxCard.tsx","airbox/components/AddBoxCard.tsx","airbox/components/BoxBoard.tsx","airbox/components/UpdatingIndicator.tsx","airbox/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["BoxType","AirBoxModel","liveQuery","subscribe","query","LC","Query","find","then","boxes","replace","map","items","db2model","on","item","undefined","box","insert","remove","get","unSubscribe","unsubscribe","create","action","loading","airBoxDB","Object","extend","set","content","boxType","save","delete","id","createWithoutData","destroy","makeObservable","this","applicationId","applicationKey","init","appId","decrypt","process","appKey","record","models","observable","push","index","findIndex","model","splice","computed","airBoxModel","AirBoxModelContext","React","createContext","UrlBox","urls","Array","from","matchAll","length","elements","url","link","slice","textContent","href","target","rel","laterUrl","BoxCard","prop","useContext","style","flex","boxSizing","maxWidth","border","overflowWrap","onClick","navigator","clipboard","writeText","AddBoxCard","useState","update","onSubmit","event","preventDefault","Text","catch","alert","type","placeholder","required","value","onChange","e","BoxBoard","observer","display","flexWrap","padding","UpdatingIndicator","isLoading","AirBoxApp","useEffect","Provider","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","constructor","name","test","_arrayLikeToArray","arr","len","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/6.b41d2f7b.chunk.js","sourcesContent":["export default interface Box extends BoxWithoutId {\n  id: string;\n}\n\nexport interface BoxWithoutId {\n  content: string;\n\n  boxType: BoxType;\n}\n\nexport enum BoxType {\n  Text = 'Text',\n  Image = 'Image',\n  URL = 'URL',\n  File = 'File',\n}","import { action, computed, makeObservable, observable } from \"mobx\";\nimport React from \"react\";\nimport LC from 'leanengine';\nimport Box, { BoxWithoutId, BoxType } from \"./box\";\nimport { decrypt } from \"../../login/auth\";\n\nexport default class AirBoxModel {\n  @observable\n  private models: Array<Box> = [];\n\n  @observable\n  private loading = true;\n\n  private liveQuery: LC.LiveQuery<LC.Queriable> | undefined;\n\n  constructor() {\n    makeObservable(this);\n    if (LC.applicationId === undefined || LC.applicationKey === undefined) {\n      LC.init({\n        appId: decrypt(process.env.REACT_APP_LEAN_AIRBOX_ID),\n        appKey: decrypt(process.env.REACT_APP_LEAN_AIRBOX_KEY),\n      });\n    }\n    this.subscribe();\n  }\n\n  subscribe = () => {\n    const query = new LC.Query('AirBox');\n    query.find().then(boxes =>\n      this.replace(boxes.map(items => this.db2model(items)))\n    );\n    query.subscribe().then(liveQuery => {\n      this.liveQuery = liveQuery;\n      liveQuery.on('create', item => {\n        if (item !== undefined) {\n          const box = this.db2model(item);\n          this.insert(box);\n        }\n      });\n      liveQuery.on('delete', item => {\n        if (item !== undefined) {\n          this.remove(item.get('objectId') as string);\n        }\n      });\n    });\n  }\n\n  unSubscribe = () => {\n    this.liveQuery?.unsubscribe();\n  }\n\n  @action\n  private replace = (items: Array<Box>) => {\n    this.models = items;\n    this.loading = false;\n  }\n\n  @action\n  private insert = (item: Box) => {\n    this.models.push(item);\n    this.loading = false;\n  }\n\n  @action\n  private remove = (id: string) => {\n    const index = this.models.findIndex((model) => model.id === id);\n    if (index > -1) {\n      this.models.splice(index, 1);\n    }\n    this.loading = false;\n  }\n\n  private db2model(record: LC.Queriable): Box {\n    return {\n      id: record.get('objectId') as string,\n      content: record.get('content') as string,\n      boxType: BoxType[record.get('content') as keyof typeof BoxType],\n    };\n  }\n\n  create = (box: BoxWithoutId) => {\n    action(() => this.loading = true);\n    const AirBoxDB = LC.Object.extend('AirBox');\n    const airBoxDB = new AirBoxDB();\n    airBoxDB.set('content', box.content);\n    airBoxDB.set('boxType', BoxType[box.boxType]);\n    return airBoxDB.save();\n  }\n\n  delete = (id: string) => {\n    action(() => this.loading = true);\n    const airBoxDB = LC.Object.createWithoutData('AirBox', id);\n    airBoxDB.destroy();\n  }\n\n  @computed get boxes() {\n    return this.models;\n  }\n\n  @computed get isLoading() {\n    return this.loading;\n  }\n\n}\n\nconst airBoxModel = new AirBoxModel();\nexport const AirBoxModelContext = React.createContext<AirBoxModel>(airBoxModel);\n","import React, { useContext } from \"react\";\nimport Box from \"../model/box\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\ninterface BoxCardProp {\n  box: Box\n}\n\nconst BoxCard = (prop: BoxCardProp) => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  return (\n    <div style={{ flex: '1 200px', boxSizing: 'border-box', maxWidth: '100%', border: '1px solid', overflowWrap: 'break-word' }}>\n      {UrlBox(prop.box.content)}\n      <button onClick={() => { airBoxModel.delete(prop.box.id) }}>Delete</button>\n      <button onClick={() => { navigator.clipboard.writeText(prop.box.content) }}>Copy</button>\n    </div>\n  );\n}\n\nconst UrlBox = (content: string) => {\n  const urlRegexp = /https?:\\/\\/[-a-zA-Z0-9@:%._~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b[-a-zA-Z0-9()@:%_.~#?&//=]*/g;\n  const urls = Array.from(content.matchAll(urlRegexp));\n\n  if (urls.length === 0) {\n    return <span>{content}</span>\n  }\n\n  const elements: Array<JSX.Element> = [];\n  for (let index = 0; index < urls.length; index++) {\n    // text-url-text-...-url-text\n    const url = urls[index];\n    const link = content.slice(url.index, url.index! + url[0].length);\n\n    if (index === 0 && url.index! > 0) {\n      elements.push(\n        <span key={'textSpan-begin'}>{content.slice(0, url.index)}</span>\n      );\n    }\n\n    if (index === urls.length - 1) {\n      const textContent = content.slice(url.index! + link.length, content.length);\n      elements.push(\n        <a key={`a-${index}`} href={link} target={'_blank'} rel={'noreferrer'}>{link}</a>,\n        <span key={`textSpan-${index}`}>{textContent}</span>\n      );\n      break;\n    }\n\n    // later str\n    const laterUrl = urls[index + 1];\n    const textContent = content.slice(url.index! + link.length, laterUrl.index);\n    elements.push(\n      <a key={`a-${index}`} href={link} target={'_blank'} rel={'noreferrer'}>{link}</a>,\n      <span key={`textSpan-${index}`}>{textContent}</span>\n    );\n\n  }\n  return elements\n}\n\nexport default BoxCard","import React, { useContext, useState } from \"react\";\nimport { BoxType } from \"../model/box\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\nconst AddBoxCard = () => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  const [content, update] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    airBoxModel.create({\n      content: content,\n      boxType: BoxType.Text,\n    }).catch(() => {alert('Fail to add')});\n    update('');\n  }\n\n\n  return (\n    <div style={{ border: '1px solid' }}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder={'Just type something😎'}\n          required\n          value={content}\n          onChange={(e) => update(e.target.value)}\n        />\n        <input type='submit' />\n      </form>\n    </div>\n  );\n}\n\nexport default AddBoxCard","import React, { useContext } from 'react';\nimport { AirBoxModelContext } from '../model/box_model';\nimport { observer } from 'mobx-react-lite';\nimport BoxCard from './BoxCard';\nimport AddBoxCard from './AddBoxCard';\n\nconst BoxBoard = observer(() => {\n  const airBoxModel = useContext(AirBoxModelContext);\n\n  const boxes = airBoxModel.boxes.map(box => (\n    <BoxCard key={box.id} box={box} />\n  ));\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexWrap: 'wrap', padding: '10px' }}>\n        {boxes}\n      </div>\n      <AddBoxCard />\n    </>\n  );\n})\n\nexport default BoxBoard","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\nconst UpdatingIndicator = observer(() => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  if (airBoxModel.isLoading) {\n    return <p>Updating...</p>\n  } else {\n    return null;\n  }\n})\n\nexport default UpdatingIndicator;","import React, { useEffect } from 'react';\nimport AirBoxModel, { AirBoxModelContext } from './model/box_model';\nimport BoxBoard from './components/BoxBoard';\nimport UpdatingIndicator from './components/UpdatingIndicator';\n\nfunction AirBoxApp() {\n  const airBoxModel = new AirBoxModel();\n\n  useEffect(() => {\n    return () => {\n      airBoxModel.unSubscribe();\n    };\n  })\n\n  return (\n    <AirBoxModelContext.Provider value={airBoxModel}>\n      <UpdatingIndicator />\n      <BoxBoard />\n    </AirBoxModelContext.Provider>\n  );\n}\n\nexport default AirBoxApp;\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}