{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","login/auth.tsx","home/index.tsx","calculator/model/expression.tsx","calculator/model/controller.tsx","calculator/assets/icons/delete.svg","calculator/assets/icons/backspace.svg","calculator/components/MathKeyboard.tsx","calculator/components/MathBox.tsx","calculator/components/Plot.tsx","calculator/components/ResultBox.tsx","calculator/components/History.tsx","calculator/index.tsx","movie/model/movie_model.tsx","movie/components/UpdatingIndicator.tsx","movie/components/MovieCard.tsx","movie/components/MovieBoard.tsx","movie/index.tsx","airbox/model/box.ts","airbox/model/box_model.tsx","airbox/components/BoxCard.tsx","airbox/components/AddBoxCard.tsx","airbox/components/BoxBoard.tsx","airbox/components/UpdatingIndicator.tsx","airbox/index.tsx","login/index.tsx","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","authenticate","key","AES","decrypt","toString","Utf8Encode","haveKey","localStorage","getItem","length","cipher","Error","Home","Mode","require","Expression","db","parser","AlgebraLatex","makeObservable","this","parseLatex","latex","toNerdamer","expression","evaluate","text","result","toTeX","calc2dis","forEach","v","k","replace","search","Defint","Limit","Matrix","Var","Eval","solveFor","nerdamer","integrate","diff","history","observable","action","a","openDB","upgrade","createObjectStore","keyPath","getAll","rawLatex","item","expStr","date","Date","now","put","push","computed","Map","RegExp","ExpContext","React","createContext","useExpStore","useContext","Controller","mfController","setController","mf","focus","add","insert","format","backspace","executeCommand","clear","move","direction","ControllerContext","MathKeyboard","style","maxWidth","margin","userSelect","display","gridTemplateColumns","justifyContent","gap","gridAutoRows","ExtraKeyboard","map","index","MathKey","children","onclick","BasicKeyboard","row1","row2","command","row3","expStore","src","deleteIcon","alt","width","backIcon","row4","save","prop","onClick","textTransform","height","background","fontFamily","fontSize","MathBox","exp","virtualKeyboardMode","fontsDirectory","onContentDidChange","update","getValue","ref","mfe","marginBlock","border","backgroundColor","gridColumn","outline","Plot","rootEl","useRef","useEffect","functionPlot","target","current","grid","title","data","fn","e","withGrid","Component","EvalResultBox","observer","evalResult","eval","textResult","undefined","InfoBox","content","SymResultBox","value","readOnly","hidden","hideAdd","marginLeft","substr","ResultBox","mode","HistoryBox","getHistory","Calculator","initHistory","Provider","flexDirection","History","flexShrink","GridContainer","props","flex","MovieModel","liveQuery","subscribe","init","query","LC","Query","find","movies","model","movie","db2model","on","newItem","updating","movieItem","indexOf","splice","unSubscribe","unsubscribe","applicationId","applicationKey","appId","process","appKey","record","id","get","poster","year","released","runtime","genre","director","writer","actors","plot","language","country","awards","imdb","douban","rottenTomatoes","rating","MovieDB","Object","extend","movieDB","set","createWithoutData","destroy","movieModel","MovieModelContext","UpdatingIndicator","isUpdating","MovieCard","MovieBoard","padding","MovieApp","BoxType","AirBoxModel","boxes","items","box","remove","status","create","airBoxDB","boxType","delete","models","findIndex","airBoxModel","AirBoxModelContext","UrlBox","urls","Array","from","matchAll","elements","url","link","slice","textContent","href","rel","laterUrl","BoxCard","boxSizing","overflowWrap","clipboard","writeText","AddBoxCard","useState","onSubmit","event","preventDefault","Text","alert","type","placeholder","required","onChange","BoxBoard","flexWrap","getStatue","AirBoxApp","Login","useHistory","useLocation","goBack","setItem","setKey","autoComplete","App","Header","fallback","exact","path","render","defaultComponent","Movie","AirBox","linkStyle","color","textDecoration","to","RedirectRoute","pathname","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.46c76b5b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import AES from 'crypto-js/aes';\nimport Utf8Encode from 'crypto-js/enc-utf8';\n\nexport const authenticate = (key: string) => {\n  const cipher = 'U2FsdGVkX188/AO4D/R1RFTPjxyveU/Y+6jmDIbN4fYatwhuTXYU0yBUO5DwXVzx';\n  const text = AES.decrypt(cipher, key).toString(Utf8Encode)\n  return text === 'Hello, React&App'\n};\n\nexport const haveKey = () => {\n  const key = localStorage.getItem('private key')\n  if (key && key.length !== 0 && authenticate(key)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport const setKey = (key: string) => {\n  if (authenticate(key)) {\n    localStorage.setItem('private key', key);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport const decrypt = (cipher: string | undefined) => {\n  const key = localStorage.getItem('private key');\n  if (!key || key.length === 0 || !cipher || cipher.length === 0) {\n    throw Error(`decrypt ${cipher} failed`);\n  } else {\n    return AES.decrypt(cipher, key).toString(Utf8Encode)\n  }\n}\n","import React from 'react'\n\nexport default function Home() {\n  return <p>Home</p>\n}","import { action, computed, makeObservable, observable } from \"mobx\";\nimport React, { useContext } from \"react\";\nimport nerdamer from 'nerdamer';\nimport AlgebraLatex from 'algebra-latex';\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\nrequire('nerdamer/all');\n\nexport enum Mode {\n  Eval,\n  Var,\n  Defint,\n  Limit,\n  Matrix,\n};\n\nexport interface ExprHistory {\n  expStr: string,\n  date: number,\n}\n\ninterface ExprDB extends DBSchema {\n  expressions: {\n    value: ExprHistory;\n    key: number;\n  };\n}\n\nexport default class Expression {\n  @observable latex: string = '';\n\n  @observable private history: ExprHistory[] = [];\n\n  private db: IDBPDatabase<ExprDB> | undefined;\n\n  private parser = new AlgebraLatex();\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action\n  initHistory = async () => {\n    const db = await openDB<ExprDB>('expr-db', 1, {\n      upgrade(db) {\n        db.createObjectStore('expressions', { keyPath: 'date' });\n      },\n    });\n    this.db = db;\n    this.history = await db.getAll(\"expressions\");\n    console.log(this.history)\n  }\n\n  @action\n  update = (rawLatex: string) => {\n    this.latex = rawLatex;\n  }\n\n  @action\n  save = () => {\n    if (this.db && this.latex.length > 0) {\n      const item = { expStr: this.latex, date: Date.now() };\n      this.db.put('expressions', item);\n      this.history.push(item);\n    } else {\n      console.log('Invalid save')\n    }\n  }\n\n  @action\n  delete = () => { }\n\n  @computed get expression() {\n    try {\n      return this.parser.parseLatex(this.latex).toNerdamer() as nerdamer.Expression;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get eval() {\n    try {\n      return this.expression!.evaluate().text();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get text() {\n    try {\n      // TODO: Implement only here, find a better way to implement to all method\n      let result = this.expression?.toTeX();\n      calc2dis.forEach((v, k) => result = result?.replace(k, v));\n      return result;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get mode(): Mode {\n    try {\n      if (this.latex.search('int') >= 0) {\n        return Mode.Defint;\n      } else if (this.latex.search('limit') >= 0) {\n        return Mode.Limit;\n      } else if (this.latex.search('matrix') >= 0) {\n        return Mode.Matrix;\n      } else if (this.latex.search('x') >= 0) {\n        return Mode.Var;\n      } else {\n        return Mode.Eval;\n      }\n    } catch (error) {\n      return Mode.Eval;\n    }\n  }\n\n  @computed get solve() {\n    try {\n      return this.expression!.solveFor('x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get integrate() {\n    try {\n      return nerdamer.integrate(this.expression!, 'x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get diff() {\n    try {\n      return nerdamer.diff(this.expression!, 'x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get getHistory() {\n    return this.history\n  }\n\n}\n\nconst calc2dis = new Map<RegExp, string>([\n  [RegExp('\\\\\\\\cdot', 'g'), '\\\\times'],\n]);\n\nexport const ExpContext = React.createContext<Expression>(new Expression());\n\nexport const useExpStore = () => {\n  const store = useContext(ExpContext);\n  return store;\n}","import { Mathfield } from 'mathlive/dist/public/mathfield'\nimport React from 'react';\n\nexport default class Controller {\n  private mfController!: Mathfield;\n\n  setController = (mf: Mathfield) => {\n    this.mfController = mf;\n    this.focus();\n  }\n\n  add = (expression: string) => this.mfController.insert(expression, { focus: true, format: \"latex\" });\n\n  backspace = () => {\n    this.mfController.executeCommand(\"deleteBackward\");\n    this.focus();\n  }\n\n  clear = () => {\n    this.mfController.executeCommand(\"deleteAll\");\n    this.focus();\n  }\n\n  move = (direction: Direction) => {\n    if (direction === \"forward\") {\n      this.mfController.executeCommand(\"moveToNextChar\");\n    } else {\n      this.mfController.executeCommand(\"moveToPreviousChar\");\n    }\n    this.focus();\n  }\n\n  private focus = () => {\n    if (this.mfController && this.mfController.focus) {\n      this.mfController.focus();\n    }\n  }\n}\n\ntype Direction = 'forward' | 'backword';\n\nconst controller = new Controller();\nexport const ControllerContext = React.createContext<Controller>(controller);","export default __webpack_public_path__ + \"static/media/delete.020411b3.svg\";","export default __webpack_public_path__ + \"static/media/backspace.521c7719.svg\";","import React, { MouseEventHandler, useContext } from \"react\";\nimport { ControllerContext } from \"../model/controller\";\nimport deleteIcon from '../assets/icons/delete.svg';\nimport backIcon from '../assets/icons/backspace.svg';\nimport '../assets/fonts/font.css';\nimport { useExpStore } from \"../model/expression\";\n\nexport default function MathKeyboard() {\n\n  return (\n    <div style={{ maxWidth: 400, margin: 'auto', userSelect: 'none' }}>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(5, 1fr)', justifyContent: 'center', gap: 2, gridAutoRows: 'minmax(32px, auto)' }}>\n        {ExtraKeyboard().map(\n          (key, index) => (\n            <div key={'extra' + index}>\n              <MathKey\n                children={key.children}\n                onclick={key.onclick}\n                key={index}\n              />\n            </div>\n          )\n        )}\n        {BasicKeyboard().map(\n          (key, index) => (\n            <div key={'basic' + index} >\n              <MathKey\n                children={key.children}\n                onclick={key.onclick}\n                key={index}\n              />\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ExtraKeyboard(): MathKeyProp[] {\n  const controller = useContext(ControllerContext);\n\n  const row1: Array<MathKeyProp> = ['sin', 'cos', 'tan', 'log'].map((v) => ({\n    children: v,\n    onclick: () => {\n      controller.add(`\\\\${v}({#?})`);\n    }\n  }));\n\n  row1.push({\n    children: 'sqrt',\n    onclick: () => {\n      controller.add(\"\\\\sqrt\");\n    }\n  })\n\n  const row2Trig: Array<Record<\"children\" | \"command\", string>> = [\n    {\n      children: 'asin',\n      command: '\\\\arcsin({#?})'\n    },\n    {\n      children: 'cos',\n      command: '\\\\arccos({#?})'\n    },\n    {\n      children: 'tan',\n      command: '\\\\arctan({#?})'\n    },\n    {\n      children: 'e^',\n      command: 'e^{#?}'\n    },\n    {\n      children: '^2',\n      command: '{#?}^2'\n    },\n  ];\n\n  const row2: Array<MathKeyProp> = row2Trig.map((v) => ({\n    children: v.children,\n    onclick: () => controller.add(v.command)\n  }));\n\n  const row3: Array<MathKeyProp> = [{\n    children: 'frac',\n    onclick: () => controller.add('\\\\frac'),\n  }];\n\n  ['(', ')'].map((v) => (\n    row3.push({\n      children: v,\n      onclick: () => {\n        controller.add(v);\n      }\n    })\n  ));\n\n  row3.push({\n    children: '←',\n    onclick: () => {\n      controller.move(\"backword\");\n    }\n  })\n\n  row3.push({\n    children: '→',\n    onclick: () => {\n      controller.move(\"forward\");\n    }\n  })\n  return [...row1, ...row2, ...row3];\n}\n\nfunction BasicKeyboard(): MathKeyProp[] {\n  const controller = useContext(ControllerContext);\n  const expStore = useExpStore();\n\n  const row1: Array<MathKeyProp> = ['7', '8', '9'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row1.push({\n    children: <img src={deleteIcon} alt=\"del\" style={{ width: 20 }} />,\n    onclick: () => controller.clear()\n  })\n\n  row1.push({\n    children: <img src={backIcon} alt=\"backspace\" style={{ width: 20 }} />,\n    onclick: () => controller.backspace()\n  })\n\n  const row2: Array<MathKeyProp> = ['4', '5', '6', '+', '-'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  const row3: Array<MathKeyProp> = ['1', '2', '3', '*', '/'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  const row4: Array<MathKeyProp> = ['0', '.', 'e'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row4.push({\n    children: 'pi',\n    onclick: () => controller.add('\\\\pi')\n  })\n\n  row4.push({\n    children: '=',\n    onclick: () => expStore.save()\n  })\n\n  return [...row1, ...row2, ...row3, ...row4];\n}\n\ninterface MathKeyProp {\n  onclick: MouseEventHandler\n  children?: string | JSX.Element\n}\n\nfunction MathKey(prop: MathKeyProp) {\n  return (\n    <button\n      onClick={prop.onclick}\n      style={{\n        textTransform: 'lowercase',\n        height: \"100%\",\n        width: \"100%\",\n        background: 'none',\n      }}\n    >\n      {typeof prop.children === 'string' ?\n        <span style={{ fontFamily: \"KaTeX\", fontSize: 20 }}> {prop.children} </span> :\n        prop.children\n      }\n    </button>\n  );\n}","import React, { useContext } from \"react\";\nimport { useExpStore } from \"../model/expression\";\nimport { ControllerContext } from '../model/controller';\nimport MathView from \"react-math-view\";\n\nexport default function MathBox() {\n  const exp = useExpStore();\n  const controller = useContext(ControllerContext);\n\n  return (\n    <MathView\n      virtualKeyboardMode='off'\n      fontsDirectory={'../assets/fonts'}\n      onContentDidChange={\n        mf => exp.update(mf.getValue(\"latex-expanded\"))\n      }\n      ref={(mfe) => {\n        if (mfe) {\n          controller.setController(mfe);\n        }\n      }}\n      style={{\n        fontSize: 24,\n        marginBlock: 5,\n        border: '2px dashed black',\n        backgroundColor: 'white',\n        gridColumn: '1/-1',\n        outline: 0,\n      }}\n    />\n  );\n}","import React, { useEffect, useRef } from 'react'\nimport functionPlot from 'function-plot';\n\ninterface PlotProp {\n  expStr: string,\n}\n\nconst Plot = (prop: PlotProp) => {\n  let rootEl = useRef(null);\n\n  useEffect(() => {\n    try {\n      functionPlot({\n        target: rootEl.current ?? \"\",\n        width: 800,\n        height: 300,\n        grid: true,\n        title: prop.expStr,\n        data: [{\n          fn: prop.expStr,\n        }]\n      })\n    } catch (e) { }\n  })\n\n  return (<div ref={rootEl} />)\n}\n\nexport default Plot;","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { Mode, useExpStore } from \"../model/expression\";\nimport MathView from 'react-math-view';\nimport { ControllerContext } from \"../model/controller\";\nimport Plot from \"./Plot\";\n\nconst ResultBox = () => {\n  const exp = useExpStore();\n\n  switch (exp.mode) {\n    case Mode.Eval:\n      return withGrid(<EvalResultBox />);\n    case Mode.Var:\n      return (<SymResultBox />);\n    default:\n      return (<EvalResultBox />);\n  }\n};\n\nconst withGrid = (Component: JSX.Element) => {\n  return (\n    <div style={{  }}>\n      {Component}\n    </div>\n  );\n}\n\nconst EvalResultBox = observer(() => {\n  const exp = useExpStore();\n  const evalResult = exp.eval;\n  const textResult = exp.text;\n\n  if (evalResult === undefined) {\n    return <div></div>;\n  }\n\n  if (evalResult === textResult) {\n    return (<InfoBox content={`=${evalResult}`} />);\n  }\n\n  return (<div>\n    <p>{exp.latex}</p>\n    <InfoBox content={`=${exp.eval}`} />\n    <InfoBox content={`=${exp.text}`} />\n  </div>);\n});\n\n\nconst SymResultBox = observer(() => {\n  const exp = useExpStore();\n\n  if (exp.integrate === undefined) {\n    return <div></div>;\n  }\n\n  return (<div>\n    <p>{exp.latex}</p>\n    <InfoBox content={`=${exp.integrate}`} />\n    <InfoBox content={`=${exp.diff}`} />\n    {exp.eval ? <Plot expStr={exp.eval} /> : null}\n  </div>);\n});\n\ninterface InfoBoxProp {\n  content: string,\n  hideAdd?: boolean,\n}\n\nfunction InfoBox(prop: InfoBoxProp) {\n  const controller = useContext(ControllerContext);\n  return (\n    <div>\n      <MathView\n        value={prop.content}\n        readOnly={true}\n        style={{ outline: 0, display: 'inline-block' }}\n        fontsDirectory={'../assets/fonts'}\n      />\n      <button\n        hidden={prop.hideAdd}\n        style={{ height: '50%', marginLeft: '20pt' }}\n        onClick={() => {\n          controller.clear();\n          controller.add(prop.content.substr(1));\n        }}>\n        +\n      </button>\n    </div>\n  );\n}\n\nexport default ResultBox;","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useExpStore } from \"../model/expression\";\n\nconst HistoryBox = observer(() => {\n  const exp = useExpStore();\n  return (\n    <div style={{}}>\n      <ul>\n        {exp.getHistory.map(item => {\n          return (<li key={item.date}>{item.expStr}</li>);\n        })}\n      </ul>\n    </div>\n  );\n});\n\nexport default HistoryBox;","import React, { useEffect } from 'react';\nimport './model/expression';\nimport Expression, { ExpContext } from './model/expression';\nimport Controller, { ControllerContext } from './model/controller';\nimport MathKeyboard from './components/MathKeyboard';\nimport MathBox from './components/MathBox';\nimport ResultBox from './components/ResultBox';\nimport HistoryBox from './components/History';\n\nexport default function Calculator() {\n  const controller = new Controller();\n  const expStore = new Expression();\n\n  useEffect(() => { expStore.initHistory() });\n\n  return (\n    <ControllerContext.Provider value={controller} >\n      <ExpContext.Provider value={expStore}>\n        <div style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n          <GridContainer>\n            <MathBox />\n            <div style={{ gridColumn: '1/9' }}><ResultBox /></div>\n            <div style={{ gridColumn: '9/-1' }}><HistoryBox /></div>\n          </GridContainer>\n          <div style={{ flexShrink: 0 }}>\n            <MathKeyboard />\n          </div>\n        </div>\n      </ExpContext.Provider>\n    </ControllerContext.Provider>\n  );\n}\n\nconst GridContainer = (props: { children: React.ReactNode }) => {\n  return (\n    <div style={{ width: '90%', margin: 'auto', flex: '1 0 auto' }}>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(12, 1fr)' }}>\n        {props.children}\n      </div>\n    </div>\n  )\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\nimport React from \"react\";\nimport LC from 'leanengine';\nimport { decrypt } from \"../../login/auth\";\n\nexport default class MovieModel {\n  @observable\n  private model: Array<MoviewithRef> = [];\n\n  @observable\n  private updating: boolean = false;\n\n  private liveQuery!: LC.LiveQuery<LC.Queriable>;\n\n  constructor() {\n    makeObservable(this);\n    if (LC.applicationId === undefined || LC.applicationKey === undefined) {\n      LC.init({\n        appId: decrypt(process.env.REACT_APP_LEAN_MOVIE_ID),\n        appKey: decrypt(process.env.REACT_APP_LEAN_MOVIE_KEY),\n      });\n    }\n  }\n\n  subscribe = (init = true) => {\n    const query = new LC.Query('Movie');\n    if (init) {\n      query.find().then(movies => {\n        this.model = movies.map(movie => this.db2model(movie))\n      });\n    }\n    query.subscribe().then(liveQuery => {\n      this.liveQuery = liveQuery;\n      liveQuery.on('create', (newItem) => {\n        if (newItem !== undefined) {\n          const movie = this.db2model(newItem);\n          this.updating = false;\n          this.model.push(movie);\n        }\n      });\n      liveQuery.on('update', (item) => {\n        if (item !== undefined) {\n          const movieItem = this.db2model(item);\n          const index = this.model.indexOf(movieItem);\n          if (index > -1) {\n            this.model[index] = movieItem;\n          }\n        }\n      })\n      liveQuery.on('delete', (item) => {\n        if (item !== undefined) {\n          const index = this.model.indexOf(this.db2model(item));\n          if (index > -1) {\n            this.model.splice(index, 1);\n          }\n        }\n      });\n    });\n  }\n\n  unSubscribe = () => {\n    this.liveQuery?.unsubscribe();\n  }\n\n  private db2model(record: LC.Queriable): MoviewithRef {\n    return {\n      id: record.get('id') as string,\n      poster: record.get('poster') as string,\n      year: record.get('year') as number,\n      released: record.get('released') as string,\n      runtime: record.get('runtime') as number,\n      genre: record.get('genre') as string,\n      director: record.get('director') as string,\n      writer: record.get('writer') as string,\n      actors: record.get('actors') as string,\n      plot: record.get('plot') as string,\n      language: record.get('language') as string,\n      country: record.get('country') as string,\n      awards: record.get('awards') as string,\n      imdb: record.get('imdbd') as number,\n      douban: record.get('douban') as number,\n      rottenTomatoes: record.get('rottenTomatoes') as number,\n      rating: record.get('rating') as number,\n      title: record.get('title') as string,\n      ref: record.get('objectId') as string,\n    };\n  }\n\n  @action\n  create = async (movie: Movie) => {\n    this.updating = true;\n    const MovieDB = LC.Object.extend('Movie');\n    const movieDB = new MovieDB();\n    movieDB.set('id', movie.id);\n    movieDB.set('poster', movie.poster);\n    movieDB.set('year', movie.year);\n    movieDB.set('released', movie.released);\n    movieDB.set('runtime', movie.runtime);\n    movieDB.set('genre', movie.genre);\n    movieDB.set('director', movie.director);\n    movieDB.set('writer', movie.writer);\n    movieDB.set('actors', movie.actors);\n    movieDB.set('plot', movie.plot);\n    movieDB.set('language', movie.language);\n    movieDB.set('country', movie.country);\n    movieDB.set('awards', movie.awards);\n    movieDB.set('imdb', movie.imdb);\n    movieDB.set('douban', movie.douban);\n    movieDB.set('rottenTomatoes', movie.rottenTomatoes);\n    movieDB.set('rating', movie.rating);\n    movieDB.set('title', movie.title);\n    return movieDB.save();\n  }\n\n  @action\n  delete = (id: string) => {\n    this.updating = true;\n    const movieDB = LC.Object.createWithoutData('Movie', id);\n    movieDB.destroy();\n  }\n\n  @computed get movies() {\n    return this.model;\n  }\n\n  @computed get isUpdating() {\n    return this.updating;\n  }\n\n}\n\nexport interface Movie {\n  id: string;\n\n  poster: string;\n\n  year: number;\n\n  released: string;\n\n  runtime: number;\n\n  genre: string;\n\n  director: string;\n\n  writer: string;\n\n  actors: string;\n\n  plot: string;\n\n  language: string;\n\n  country: string;\n\n  awards: string;\n\n  imdb: number;\n\n  douban?: number;\n\n  rottenTomatoes: number;\n\n  rating?: number;\n\n  title: string;\n}\n\ninterface MoviewithRef extends Movie {\n  ref: string;\n}\n\nconst movieModel = new MovieModel();\nexport const MovieModelContext = React.createContext<MovieModel>(movieModel);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { MovieModelContext } from \"../model/movie_model\";\n\nconst UpdatingIndicator = observer(() => {\n  const movieModel = useContext(MovieModelContext);\n  if (movieModel.isUpdating) {\n    return <p>Updating...</p>\n  } else {\n    return null;\n  }\n})\n\nexport default UpdatingIndicator;","import React from \"react\";\nimport { Movie } from \"../model/movie_model\";\n\ninterface MovieCardProp {\n  movie: Movie\n}\n\nconst MovieCard = (prop: MovieCardProp) => {\n  return (\n    <div style={{ border: '1px solid' }}>\n      <img\n        src={prop.movie.poster}\n        alt={prop.movie.title}\n      />\n      <p> {prop.movie.title} </p>\n    </div>\n  );\n}\n\nexport default MovieCard","import React, { useContext } from 'react';\nimport { MovieModelContext } from '../model/movie_model';\nimport { observer } from 'mobx-react-lite';\nimport MovieCard from './MovieCard';\n\nconst MovieBoard = observer(() => {\n  const movieModel = useContext(MovieModelContext);\n\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: `repeat(5, 1fr)`, gap: 20, padding: 10 }}>\n      {movieModel.movies.map(\n        movie => <MovieCard movie={movie} key={movie.id} />\n      )}\n    </div>\n  );\n})\n\nexport default MovieBoard","import React, { useEffect } from 'react';\nimport MovieModel, { MovieModelContext } from './model/movie_model';\nimport UpdatingIndicator from './components/UpdatingIndicator'\nimport MovieBoard from './components/MovieBoard'\n\nfunction MovieApp() {\n\n  const movieModel = new MovieModel();\n\n  useEffect(() => {\n    movieModel.subscribe();\n    return () => {\n      movieModel.unSubscribe();\n    };\n  })\n\n  return (\n    <MovieModelContext.Provider value={movieModel}>\n      <MovieBoard />\n      <UpdatingIndicator />\n    </MovieModelContext.Provider>\n  );\n}\n\nexport default MovieApp;\n","export default interface Box extends BoxWithoutId {\n  id: string;\n}\n\nexport interface BoxWithoutId {\n  content: string;\n\n  boxType: BoxType;\n}\n\nexport enum BoxType {\n  Text = 'Text',\n  Image = 'Image',\n  URL = 'URL',\n  File = 'File',\n}","import { action, computed, makeObservable, observable } from \"mobx\";\nimport React from \"react\";\nimport LC from 'leanengine';\nimport Box, { BoxWithoutId, BoxType } from \"./box\";\nimport { decrypt } from \"../../login/auth\";\n\nexport type Status = \"loading\" | \"error\" | \"done\";\n\nexport default class AirBoxModel {\n  @observable\n  private models: Array<Box> = [];\n\n  @observable\n  private status: Status = \"loading\";\n\n  private liveQuery: LC.LiveQuery<LC.Queriable> | undefined;\n\n  constructor() {\n    makeObservable(this);\n    if (LC.applicationId === undefined || LC.applicationKey === undefined) {\n      LC.init({\n        appId: decrypt(process.env.REACT_APP_LEAN_AIRBOX_ID),\n        appKey: decrypt(process.env.REACT_APP_LEAN_AIRBOX_KEY),\n      });\n    }\n  }\n\n  subscribe = async () => {\n    const query = new LC.Query('AirBox');\n    query.find()\n      .then(boxes =>\n        this.replace(boxes.map(items => this.db2model(items))))\n      .then(() => {\n        query.subscribe().then(liveQuery => {\n          this.liveQuery = liveQuery;\n          liveQuery.on('create', item => {\n            if (item !== undefined) {\n              const box = this.db2model(item);\n              this.insert(box);\n            }\n          });\n          liveQuery.on('delete', item => {\n            if (item !== undefined) {\n              this.remove(item.get('objectId') as string);\n            }\n          });\n        });\n      })\n      .catch(action(() => { this.status = \"error\"; }));\n  }\n\n  unSubscribe = () => {\n    this.liveQuery?.unsubscribe();\n  }\n\n  @action\n  private replace = (items: Array<Box>) => {\n    this.models = items;\n    this.status = \"done\";\n  }\n\n  @action\n  private insert = (item: Box) => {\n    this.models.push(item);\n    this.status = \"done\";\n  }\n\n  @action\n  private remove = (id: string) => {\n    const index = this.models.findIndex((model) => model.id === id);\n    if (index > -1) {\n      this.models.splice(index, 1);\n    }\n    this.status = \"done\";\n  }\n\n  private db2model(record: LC.Queriable): Box {\n    return {\n      id: record.get('objectId') as string,\n      content: record.get('content') as string,\n      boxType: BoxType[record.get('content') as keyof typeof BoxType],\n    };\n  }\n\n  create = (box: BoxWithoutId) => {\n    action(() => this.status = \"loading\");\n    const AirBoxDB = LC.Object.extend('AirBox');\n    const airBoxDB = new AirBoxDB();\n    airBoxDB.set('content', box.content);\n    airBoxDB.set('boxType', BoxType[box.boxType]);\n    return airBoxDB.save();\n  }\n\n  delete = (id: string) => {\n    action(() => this.status = \"loading\");\n    const airBoxDB = LC.Object.createWithoutData('AirBox', id);\n    airBoxDB.destroy();\n  }\n\n  @computed get boxes() {\n    return this.models;\n  }\n\n  @computed get getStatue() {\n    return this.status;\n  }\n\n}\n\nconst airBoxModel = new AirBoxModel();\nexport const AirBoxModelContext = React.createContext<AirBoxModel>(airBoxModel);\n","import React, { useContext } from \"react\";\nimport Box from \"../model/box\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\ninterface BoxCardProp {\n  box: Box\n}\n\nconst BoxCard = (prop: BoxCardProp) => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  return (\n    <div style={{ flex: '1 200px', boxSizing: 'border-box', maxWidth: '100%', border: '1px solid', overflowWrap: 'break-word' }}>\n      {UrlBox(prop.box.content)}\n      <button onClick={() => { airBoxModel.delete(prop.box.id) }}>Delete</button>\n      <button onClick={() => { navigator.clipboard.writeText(prop.box.content) }}>Copy</button>\n    </div>\n  );\n}\n\nconst UrlBox = (content: string) => {\n  const urlRegexp = /https?:\\/\\/[-a-zA-Z0-9@:%._~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b[-a-zA-Z0-9()@:%_.~#?&//=]*/g;\n  const urls = Array.from(content.matchAll(urlRegexp));\n\n  if (urls.length === 0) {\n    return <span>{content}</span>\n  }\n\n  const elements: Array<JSX.Element> = [];\n  for (let index = 0; index < urls.length; index++) {\n    // text-url-text-...-url-text\n    const url = urls[index];\n    const link = content.slice(url.index, url.index! + url[0].length);\n\n    if (index === 0 && url.index! > 0) {\n      elements.push(\n        <span key={'textSpan-begin'}>{content.slice(0, url.index)}</span>\n      );\n    }\n\n    if (index === urls.length - 1) {\n      const textContent = content.slice(url.index! + link.length, content.length);\n      elements.push(\n        <a key={`a-${index}`} href={link} target={'_blank'} rel={'noreferrer'}>{link}</a>,\n        <span key={`textSpan-${index}`}>{textContent}</span>\n      );\n      break;\n    }\n\n    // later str\n    const laterUrl = urls[index + 1];\n    const textContent = content.slice(url.index! + link.length, laterUrl.index);\n    elements.push(\n      <a key={`a-${index}`} href={link} target={'_blank'} rel={'noreferrer'}>{link}</a>,\n      <span key={`textSpan-${index}`}>{textContent}</span>\n    );\n\n  }\n  return elements\n}\n\nexport default BoxCard","import React, { useContext, useState } from \"react\";\nimport { BoxType } from \"../model/box\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\nconst AddBoxCard = () => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  const [content, update] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    airBoxModel.create({\n      content: content,\n      boxType: BoxType.Text,\n    }).catch(() => {alert('Fail to add')});\n    update('');\n  }\n\n\n  return (\n    <div style={{ border: '1px solid' }}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder={'Just type something😎'}\n          required\n          value={content}\n          onChange={(e) => update(e.target.value)}\n        />\n        <input type='submit' />\n      </form>\n    </div>\n  );\n}\n\nexport default AddBoxCard","import React, { useContext } from 'react';\nimport { AirBoxModelContext } from '../model/box_model';\nimport { observer } from 'mobx-react-lite';\nimport BoxCard from './BoxCard';\nimport AddBoxCard from './AddBoxCard';\n\nconst BoxBoard = observer(() => {\n  const airBoxModel = useContext(AirBoxModelContext);\n\n  const boxes = airBoxModel.boxes.map(box => (\n    <BoxCard key={box.id} box={box} />\n  ));\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexWrap: 'wrap', padding: '10px' }}>\n        {boxes}\n      </div>\n      <AddBoxCard />\n    </>\n  );\n})\n\nexport default BoxBoard","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { AirBoxModelContext } from \"../model/box_model\";\n\nconst UpdatingIndicator = observer(() => {\n  const airBoxModel = useContext(AirBoxModelContext);\n  switch (airBoxModel.getStatue) {\n    case \"loading\":\n      return (<p>Updating...</p>);\n    case \"error\":\n      return (<p>Error😥</p>);\n    default:\n      return null;\n  }\n})\n\nexport default UpdatingIndicator;","import React, { useEffect } from 'react';\nimport AirBoxModel, { AirBoxModelContext } from './model/box_model';\nimport BoxBoard from './components/BoxBoard';\nimport UpdatingIndicator from './components/UpdatingIndicator';\n\nfunction AirBoxApp() {\n  const airBoxModel = new AirBoxModel();\n\n  useEffect(() => {\n    airBoxModel.subscribe();\n    return () => {\n      airBoxModel.unSubscribe();\n    };\n  })\n\n  return (\n    <AirBoxModelContext.Provider value={airBoxModel}>\n      <UpdatingIndicator />\n      <BoxBoard />\n    </AirBoxModelContext.Provider>\n  );\n}\n\nexport default AirBoxApp;\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { haveKey, setKey } from './auth';\n\nconst Login = () => {\n  const [key, update] = useState('');\n  const history = useHistory();\n  const location = useLocation<string>();\n\n  const from = location.state || \"/\";\n\n  if (haveKey()) {\n    history.goBack();\n    return null;\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const succeed = setKey(key);\n    if (succeed) {\n      history.replace(from);\n    } else {\n      update('');\n      alert('Invalid Key');\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='password'\n          placeholder={'Enter password'}\n          autoComplete={'current-password'}\n          required\n          value={key}\n          onChange={e => update(e.target.value)}\n        />\n        <input type='submit' />\n      </form>\n    </div>\n  )\n}\n\nexport default Login;\n","import React, { Suspense } from \"react\";\nimport { NavLink, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { haveKey } from \"./login/auth\";\nimport Home from './home';\nimport Calculator from './calculator';\nimport Movie from './movie';\nimport AirBox from './airbox';\nimport Login from './login';\n\nexport default function App() {\n  return (\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <Header />\n      <div style={{flex: '1 auto'}}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Home />} />\n            <Route path=\"/login\" render={() => <Login />} />\n            <Route path=\"/calc\" render={() => <Calculator />} />\n            <RedirectRoute path=\"/movie\" defaultComponent={Movie} />\n            <RedirectRoute path=\"/airbox\" defaultComponent={AirBox} />\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nfunction Header() {\n  const linkStyle: React.CSSProperties = {\n    color: 'white',\n    fontSize: 20,\n    textDecoration: 'none',\n    padding: 8,\n  };\n  return (\n    <nav style={{ backgroundColor: '#1b1c1d', padding: 8 }}>\n      <NavLink style={linkStyle} to='/'>Home</NavLink>\n      <NavLink style={linkStyle} to='/calc'>Calc</NavLink>\n      <NavLink style={linkStyle} to='/movie'>Movie</NavLink>\n      <NavLink style={linkStyle} to='/airbox'>AirBox</NavLink>\n    </nav>\n  )\n}\n\ninterface RedirectRouteProp {\n  defaultComponent: React.ComponentType\n}\n\nconst RedirectRoute = (props: React.ComponentProps<typeof Route> & RedirectRouteProp) => {\n  const location = useLocation();\n\n  return (\n    <Route\n      {...props}\n      path={props.path}\n      render={() => {\n        return haveKey() ? <props.defaultComponent /> :\n          <Redirect to={{ pathname: \"/login\", state: location.pathname }} />\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}