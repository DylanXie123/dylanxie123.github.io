{"version":3,"sources":["calculator/model/expression.tsx","calculator/model/controller.tsx","calculator/components/MathKeyboard.tsx","calculator/components/MathBox.tsx","calculator/components/ResultBox.tsx","calculator/index.tsx"],"names":["Mode","require","Expression","parser","AlgebraLatex","makeObservable","this","parseLatex","latex","toNerdamer","error","expression","evaluate","text","result","toTeX","calc2dis","forEach","v","k","replace","search","Defint","Limit","Matrix","Var","Eval","solveFor","nerdamer","integrate","diff","observable","action","rawLatex","computed","Map","RegExp","expStore","ExpContext","React","createContext","Controller","mfController","setController","mf","focus","add","insert","format","backspace","executeCommand","clear","move","direction","controller","ControllerContext","MathKeyboard","style","position","bottom","width","zIndex","display","gridTemplateColumns","justifyContent","ExtraKeyboard","map","key","index","MathKey","children","onclick","BasicKeyboard","useContext","row1","push","row2","Delete","Backspace","row3","row4","prop","Button","variant","color","onClick","textTransform","height","value","readOnly","useStyles","makeStyles","createStyles","mathviewbox","outline","fontSize","margin","padding","border","backgroundColor","MathBox","exp","classes","className","virtualKeyboardMode","onContentDidChange","update","getValue","ref","mfe","ResultBox","observer","mode","EvalResultBox","SymResultBox","evalResult","eval","textResult","undefined","InfoBox","content","hidden","hideAdd","marginLeft","substr","Calculator","Provider"],"mappings":"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","file":"static/js/10.847bf015.chunk.js","sourcesContent":["import { action, computed, makeObservable, observable } from \"mobx\";\nimport React from \"react\";\nimport nerdamer from 'nerdamer';\nimport AlgebraLatex from 'algebra-latex'\nrequire('nerdamer/all');\n\nexport enum Mode {\n  Eval = 0,\n  Var,\n  Defint,\n  Limit,\n  Matrix,\n};\n\nexport default class Expression {\n  @observable\n  latex: string = '';\n\n  private parser = new AlgebraLatex();\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action\n  update = (rawLatex: string) => {\n    this.latex = rawLatex;\n  }\n\n  @computed get expression() {\n    try {\n      return this.parser.parseLatex(this.latex).toNerdamer() as nerdamer.Expression;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get eval() {\n    try {\n      return this.expression!.evaluate().text();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get text() {\n    try {\n      // TODO: Implement only here, find a better way to implement to all method\n      let result = this.expression?.toTeX();\n      calc2dis.forEach((v, k) => result = result?.replace(k, v));\n      return result;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get mode(): Mode {\n    try {\n      if (this.latex.search('int') >= 0) {\n        return Mode.Defint;\n      } else if (this.latex.search('limit') >= 0) {\n        return Mode.Limit;\n      } else if (this.latex.search('matrix') >= 0) {\n        return Mode.Matrix;\n      } else if (this.latex.search('x') >= 0) {\n        return Mode.Var;\n      } else {\n        return Mode.Eval;\n      }\n    } catch (error) {\n      return Mode.Eval;\n    }\n  }\n\n  @computed get solve() {\n    try {\n      return this.expression!.solveFor('x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get integrate() {\n    try {\n      return nerdamer.integrate(this.expression!, 'x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  @computed get diff() {\n    try {\n      return nerdamer.diff(this.expression!, 'x').toTeX();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n}\n\nconst calc2dis = new Map<RegExp, string>([\n  [RegExp('\\\\\\\\cdot', 'g'), '\\\\times'],\n]);\n\nconst expStore = new Expression();\nexport const ExpContext = React.createContext<Expression>(expStore);","import { Mathfield } from 'mathlive/dist/public/mathfield'\nimport React from 'react';\n\nexport default class Controller {\n  private mfController!: Mathfield;\n\n  setController = (mf: Mathfield) => {\n    this.mfController = mf;\n    this.focus();\n  }\n\n  add = (expression: string) => this.mfController.insert(expression, { focus: true, format: \"latex\" });\n\n  backspace = () => {\n    this.mfController.executeCommand(\"deleteBackward\");\n    this.focus();\n  }\n\n  clear = () => {\n    this.mfController.executeCommand(\"deleteAll\");\n    this.focus();\n  }\n\n  move = (direction: Direction) => {\n    if (direction === \"forward\") {\n      this.mfController.executeCommand(\"moveToNextChar\");\n    } else {\n      this.mfController.executeCommand(\"moveToPreviousChar\");\n    }\n  }\n\n  private focus = () => {\n    if (this.mfController && this.mfController.focus) {\n      this.mfController.focus();\n    }\n  }\n}\n\ntype Direction = 'forward' | 'backword';\n\nconst controller = new Controller();\nexport const ControllerContext = React.createContext<Controller>(controller);","import { Button } from \"@material-ui/core\";\nimport { Backspace, Delete } from \"@material-ui/icons\";\nimport React, { MouseEventHandler, useContext } from \"react\";\nimport MathView from \"react-math-view\";\nimport { ControllerContext } from \"../model/controller\";\n\nconst kKeyWidth = 64;\nconst kKeyHeight = 36;\n\nexport default function MathKeyboard() {\n\n  return (\n    <div style={{ position: 'fixed', bottom: 0, width: '100%', zIndex: -1 }}>\n      <div style={{ display: 'grid', gridTemplateColumns: `repeat(5, ${kKeyWidth}px)`, justifyContent: 'center' }}>\n        {ExtraKeyboard().map(\n          (key, index) => (\n            <div key={index}>\n              <MathKey\n                children={key.children}\n                onclick={key.onclick}\n                key={index}\n              />\n            </div>\n          )\n        )}\n      </div>\n      <div style={{ display: 'grid', gridTemplateColumns: `repeat(5, ${kKeyWidth}px)`, justifyContent: 'center' }}>\n        {BasicKeyboard().map(\n          (key, index) => (\n            <div key={index} >\n              <MathKey\n                children={key.children}\n                onclick={key.onclick}\n                key={index}\n              />\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ExtraKeyboard(): MathKeyProp[] {\n  const controller = useContext(ControllerContext);\n\n  const row1: Array<MathKeyProp> = ['\\\\sin', '\\\\cos', '\\\\tan', '\\\\log'].map((v) => ({\n    children: v,\n    onclick: () => {\n      controller.add(v + '(#?)');\n      controller.move(\"backword\");\n    }\n  }));\n\n  row1.push({\n    children: '\\\\sqrt{#?}',\n    onclick: () => controller.add('\\\\sqrt{#?}')\n  })\n\n  const row2: Array<MathKeyProp> = ['(', ')', 'e^{#?}', '{#?}^2'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row2.push({\n    children: '\\\\sin^{-1}',\n    onclick: () => {\n      controller.add('\\\\arcsin(#?)');\n      controller.move(\"backword\");\n    }\n  })\n  return [...row1, ...row2];\n}\n\nfunction BasicKeyboard(): MathKeyProp[] {\n  const controller = useContext(ControllerContext);\n\n  const row1: Array<MathKeyProp> = ['7', '8', '9'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row1.push({\n    children: <Delete />,\n    onclick: () => controller.clear()\n  })\n\n  row1.push({\n    children: <Backspace />,\n    onclick: () => controller.backspace()\n  })\n\n  const row2: Array<MathKeyProp> = ['4', '5', '6', '+', '-'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  const row3: Array<MathKeyProp> = ['1', '2', '3'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row3.push({\n    children: '\\\\times',\n    onclick: () => controller.add('*')\n  })\n\n  row3.push({\n    children: '\\\\div',\n    onclick: () => controller.add('/')\n  })\n\n  const row4: Array<MathKeyProp> = ['0', '.', '\\\\pi', 'e'].map((v) => ({\n    children: v,\n    onclick: () => controller.add(v)\n  }));\n\n  row4.push({\n    children: '=',\n    onclick: () => controller.add('/')\n  })\n\n  return [...row1, ...row2, ...row3, ...row4];\n}\n\ninterface MathKeyProp {\n  onclick: MouseEventHandler\n  children?: string | JSX.Element\n}\n\nfunction MathKey(prop: MathKeyProp) {\n\n  return (\n    <Button\n      variant='outlined'\n      color=\"primary\"\n      onClick={prop.onclick}\n      style={{ textTransform: 'lowercase', height: kKeyHeight, width: kKeyWidth }}\n    >\n      {typeof prop.children === 'string' ?\n        <MathView\n          value={prop.children}\n          readOnly={true}\n        /> :\n        prop.children}\n    </Button>\n  );\n}","import React, { useContext } from \"react\";\nimport { ExpContext } from \"../model/expression\";\nimport { ControllerContext } from '../model/controller';\nimport MathView from \"react-math-view\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    mathviewbox: {\n      outline: '5px solid white',\n      fontSize: 24,\n      margin: 5,\n      padding: 5,\n      border: '2px dashed black',\n      backgroundColor: 'white'\n    },\n  }),\n);\n\nexport default function MathBox() {\n  const exp = useContext(ExpContext);\n  const controller = useContext(ControllerContext);\n  const classes = useStyles();\n\n  return (\n    <MathView\n      className={classes.mathviewbox}\n      virtualKeyboardMode='off'\n      onContentDidChange={\n        mf => exp.update(mf.getValue(\"latex-expanded\"))\n      }\n      ref={(mfe) => {\n        if (mfe) {\n          controller.setController(mfe);\n        }\n      }}\n    />\n  );\n}","import { observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { ExpContext, Mode } from \"../model/expression\";\nimport MathView from 'react-math-view';\nimport { ControllerContext } from \"../model/controller\";\nimport { Button } from \"@material-ui/core\";\n\nconst ResultBox = observer(() => {\n  const exp = useContext(ExpContext);\n\n  switch (exp.mode) {\n    case Mode.Eval:\n      return (<>\n        <p>{exp.latex}</p>\n        <EvalResultBox />\n      </>);\n    case Mode.Var:\n      return (<>\n        <p>{exp.latex}</p>\n        <SymResultBox />\n      </>);\n    default:\n      return (<EvalResultBox />);\n  }\n});\n\nconst EvalResultBox = observer(() => {\n  const exp = useContext(ExpContext);\n  const evalResult = exp.eval;\n  const textResult = exp.text;\n\n  if (evalResult === undefined) {\n    return <div></div>;\n  }\n\n  if (evalResult === textResult) {\n    return (<InfoBox content={`=${evalResult}`} />);\n  }\n\n  return (<div>\n    <InfoBox content={`=${exp.eval}`} />\n    <InfoBox content={`=${exp.text}`} />\n  </div>);\n});\n\n\nconst SymResultBox = observer(() => {\n  const exp = useContext(ExpContext);\n\n  if (exp.integrate === undefined) {\n    return <div></div>;\n  }\n\n  return (<div>\n    <InfoBox content={`=${exp.integrate}`} />\n    <InfoBox content={`=${exp.diff}`} />\n  </div>);\n});\n\ninterface InfoBoxProp {\n  content: string,\n  hideAdd?: boolean,\n}\n\n// TODO: Auto hide button when content is empty\nfunction InfoBox(prop: InfoBoxProp) {\n  const controller = useContext(ControllerContext);\n  return (\n    <div style={{ display: 'flex' }}>\n      <MathView\n        value={prop.content}\n        readOnly={true}\n        style={{ outline: 0 }}\n      >\n      </MathView>\n      <Button\n        hidden={prop.hideAdd}\n        style={{ height: '50%', marginLeft: '20pt' }}\n        color='primary'\n        variant='contained'\n        onClick={() => {\n          controller.clear();\n          controller.add(prop.content.substr(1));\n        }}>\n        +\n      </Button>\n    </div>\n  );\n}\n\nexport default ResultBox;","import React from 'react';\nimport './model/expression';\nimport Expression, { ExpContext } from './model/expression';\nimport Controller, { ControllerContext } from './model/controller';\nimport MathKeyboard from './components/MathKeyboard';\nimport MathBox from './components/MathBox'\nimport ResultBox from './components/ResultBox'\n\nexport default function Calculator() {\n  const controller = new Controller();\n  const expStore = new Expression();\n  \n  return (\n    <ControllerContext.Provider value={controller}>\n      <ExpContext.Provider value={expStore}>\n        <MathBox />\n        <ResultBox />\n      </ExpContext.Provider>\n      <MathKeyboard />\n    </ControllerContext.Provider>\n  );\n}\n"],"sourceRoot":""}